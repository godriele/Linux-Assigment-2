#!/bin/bash

# Configuration Setup Script!

# ------------------------------------------------------------------------------------------------------------
# Step 1: Git 

if command -v git &> /dev/null; then 
   # this will check whether git is installed and available in the system's path
   
   if [ ! -d "$HOME/config_files" ]; then

	   git clone https://gitlab.com/cit2420/2420-as2-starting-files $HOME/config_files
   else
	   echo "The config_files directory already exist"
   fi 

else 
	echo "Your system does not have git installed, Installing git"

	# this will check if pacman is installed 
	if command -v pacman &> /dev/null; then
	
		# if it is, it installs git 
		sudo pacman -S git
	else
		echo "Error: Please install Git mmanually"
		exit 1
	fi

	git clone https://gitlab.com/cit2420/2420-as2-starting-files $HOME/config_files
fi 

# ----------------------------------------------------------------------------------------------------------
 # Step 2: Directories
 
 # Check if the bin and .config directories exists, create if it doesnt
 
 if [ ! -d "$HOME/bin" ]; then
	 mkdir "$HOME/bin" #this will create the bin directory
	 echo "Created the bin directory"
 fi

 if [ ! -d "$HOME/.config" ]; then
	 mkdir "$HOME/.config" #this will create the .config directory 
	 echo "Created the config directory"
 fi 

# ----------------------------------------------------------------------------------------------------------
# Step 3: Listing all the files and directories inside the cloned repository
#
  content_files=$(find $HOME/config_files -maxdepth 1 -mindepth 1 -type d)
   # Im using find to search for the direcotries inside 'config_files
   	# -maxdepth 1 = will only search one level deep inside the direcetoy
	# -mindepth 1 = will not include the root directory - skipping 'config_repo' 

# ------------------------------------------------------------------------------------------------------------

# step 4: Connecting symbolic links to our files 

  for content in $content_files; do

      # Im getting the direcotry name from the full path of the directory
      dir=$(basename "$content")

      # had issues where it was showing ".git" is not a directory, I will jsut skip it

      if [[ "$dir" == ".git" ]]; then
	      continue
      fi

      case "$dir" in

	 # so if the directory name is "bin" or "config", it will set the target
	 # location to $HOME/bin or .config

          "bin")
	  	target="$HOME/bin" 
		;;

	  "config")
	        target="$HOME/.config" 
		;;

   	  "home")
	   # This is a bit different if the directory name is "home", will set the 
	   # target location to $HOME/.bashrc
	   
	       target="$HOME/.bashrc" # will set the target for the bin directory

	       if [ -e "$target" ]; then
		       echo "$target Already exist, removing it"
		       rm -f "$target"
		fi

	       ln -s "$content/bashrc" "$target"
	   # this would look like /home/username/config_files/home/bashrc
	       continue
	       ;;

	   # if the directories does not match "bin", "config", or "home"
	   *) 
	      echo "Unknown directory: $dir"
	      continue
	      ;;
      esac
     
      # Now will create symlink for bin, config
      if [ ! -e "$target" ]; then 
	      # checks if the symlink does not exits, creates it

         ln -s "$content" "$target"
	 # will create the symlink 
	 echo "created symlink: $target -> $content"
      else 
         echo "Symlink already exists: $target"
      fi

done

echo "Configuration was a success"
